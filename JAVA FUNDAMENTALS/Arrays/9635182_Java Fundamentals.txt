1.
 Write a program to initialize an integer array and print the sum and average of the array.

import java.util.Scanner;
public class Q1
{
    public static void main(String[] args) 
    {
        int n, sum = 0;
        float average;
        Scanner s = new Scanner(System.in);
        System.out.print("Enter no. of elements you want in array:");
        n = s.nextInt();
        int a[] = new int[n];
        System.out.println("Enter all the elements:");
        for(int i = 0; i < n ; i++)
        {
            a[i] = s.nextInt();
            sum = sum + a[i];
        }
        System.out.println("Sum:"+sum);
        average = (float)sum / n;
        System.out.println("Average:"+average);
    }
}


2.
Write a program to initialize an integer array and find the maximum and minimum value of the array.
import java.util.Arrays; 
public class Q2 {
 
  static int max;
  static int min;

    public static void max_min(int my_array[]) {
        max = my_array[0];
        min = my_array[0];
        int len = my_array.length;
        for (int i = 1; i < len - 1; i = i + 2) {
            if (i + 1 > len) {
                if (my_array[i] > max) max = my_array[i];
                if (my_array[i] < min) min = my_array[i];
            }
            if (my_array[i] > my_array[i + 1]) {
                if (my_array[i] > max) max = my_array[i];
                if (my_array[i + 1] < min) min = my_array[i + 1];
            }
            if (my_array[i] < my_array[i + 1]) {
                if (my_array[i] < min) min = my_array[i];
                if (my_array[i + 1] > max) max = my_array[i + 1];
            }
        }
    }

    public static void main(String[] args) {
           int[] my_array = {25, 14, 56, 15, 36, 56, 77, 18, 29, 49};
        max_min(my_array);
        System.out.println(" Original Array: "+Arrays.toString(my_array));
        System.out.println(" Maximum value for the above array = " + max);
        System.out.println(" Minimum value for the above array = " + min);
    }
}


3.
 Write a program to initialize an integer array with values and check if a given number is present in the array or not.

If the number is not found, it will print -1 else it will print the index value of the given  number in the array.

Example 1) If the Array elements are  {1,4,34,56,7} and the search element is 90, then the output expected is -1.

Example 2)If the Array elements are  {1,4,34,56,7} and the search element is 56, then the output expected is 3.

import java.util.Arrays; 
import java.util.stream.IntStream; 
  
class Q3 { 
  
   
    private static void check(int[] arr, int toCheckValue) 
    { 
    
        boolean test = false; 
        for (int element : arr) { 
            if (element == toCheckValue) { 
                test = true; 
                break; 
            } 
        } 
  
        
        System.out.println("Is " + toCheckValue 
                           + " present in the array: " + test); 
    } 
  
    public static void main(String[] args) 
    { 
  
      
        int arr[] = { 5, 1, 1, 9, 7, 2, 6, 10 }; 
  
       
        int toCheckValue = 7; 
  
  
        System.out.println("Array: "
                           + Arrays.toString(arr)); 
  
       
        check(arr, toCheckValue); 
    } 
} 


4.
Initialize an integer array with ascii values and print the corresponding character values in a single row.

package com.beginnersbook.string;

public class Q4 {
    public static void main(String args[]){
        int num[] = {65, 120, 98, 75, 115};
        String str =null;
        for(int i: num){
            str = Character.toString((char)i);
            System.out.println(str);
        }
    }
}


5.
 Write a program to find the largest 2 numbers and the smallest 2 numbers in the given array.




6.
Write a program to initialize an array and print them in a sorted order.
public class Q6 {    
    public static void main(String[] args) {        
            
            
        int [] arr = new int [] {5, 2, 8, 7, 1};     
        int temp = 0;    
            
           
        System.out.println("Elements of original array: ");    
        for (int i = 0; i < arr.length; i++) {     
            System.out.print(arr[i] + " ");    
        }    
            
           
        for (int i = 0; i < arr.length; i++) {     
            for (int j = i+1; j < arr.length; j++) {     
               if(arr[i] > arr[j]) {    
                   temp = arr[i];    
                   arr[i] = arr[j];    
                   arr[j] = temp;    
               }     
            }     
        }    
          
        System.out.println();    
            
       
        System.out.println("Elements of array sorted in ascending order: ");    
        for (int i = 0; i < arr.length; i++) {     
            System.out.print(arr[i] + " ");    
        }    
    }    
}    



7.
 Write a program to remove the duplicate elements in an array and print the same.
Example)
I/P:{12,34,12,45,67,89}
O/P:{12,34,45,67,89}
public class Q7{  
public static int removeDuplicateElements(int arr[], int n){  
        if (n==0 || n==1){  
            return n;  
        }  
        int[] temp = new int[n];  
        int j = 0;  
        for (int i=0; i<n-1; i++){  
            if (arr[i] != arr[i+1]){  
                temp[j++] = arr[i];  
            }  
         }  
        temp[j++] = arr[n-1];     
        
        for (int i=0; i<j; i++){  
            arr[i] = temp[i];  
        }  
        return j;  
    }  
       
    public static void main (String[] args) {  
        int arr[] = {10,20,20,30,30,40,50,50};  
        int length = arr.length;  
        length = removeDuplicateElements(arr, length);  
        
        for (int i=0; i<length; i++)  
           System.out.print(arr[i]+" ");  
    }  
}  



8.
Write a program to print the sum of the elements of an array following the given below condition.

If the array has 6 and 7 in succeeding orders, ignore the numbers between 6 and 7 and consider the other numbers for calculation of sum.

Eg1) Array Elements - 10,3,6,1,2,7,9
O/P: 22   
[i.e 10+3+9]

Eg2) Array Elements - 7,1,2,3,6
O/P:19

Eg3) Array Elements - 1,6,4,7,9
O/P:10

class Q8{
public static void main(String args[]){
int[] n = {1,6,3,7,6,6,7,1};
int sum = 0;
outer:
for (int i = 0; i < n.length; i++) {
    if (n[i] == 6) {
        for (int j = i + 1; j < n.length; j++) {
            if (n[j] == 7) {
                i = j;
                continue outer;
            }
        }
    }
    sum += n[i];
}

System.out.println(sum);
}
}



9.
 Print a version of the given array where all the 10's have been removed. The remaining elements should shift left towards the start of the array as needed, and the empty spaces at the end of the array should be 0. So {1, 10, 10, 2} yields {1, 2, 0, 0}. You may modify and display the given array or make a new array.

withoutTen([1, 10, 10, 2]) → [1, 2, 0, 0]
withoutTen([10, 2, 10]) → [2, 0, 0]
withoutTen([1, 99, 10]) → [1, 99, 0]

import java.util.*;
public class Q9 {

    public static void main(String[] args) {
        int[] n= {10,3,6,1,2,7,9};
        int sum=0;
        int[][] x=check(n);
        System.out.println(Arrays.toString(x[0]));      
        if(x[0][0]==6 && x[1][0]==7) {
            for(int k=0;k<x[0][1];k++) {
                sum=sum+n[k];
            }
            for(int k=x[1][1]+1;k<n.length;k++) {
                sum=sum+n[k];
            }   
        }
        else {
            for(int i=0;i<n.length;i++)
            {
                sum=sum+n[i];
             }
        }
         System.out.println(sum);
    }

    
    public static int[][] check(int[] a) {
        int[] x=new int[2];
        int[] y=new int[2];
        int j;
        for(int i=0;i<a.length;i++) {
            if(a[i]==6){
                x[0]=6;
                x[1]=i;
}
            if(a[i]==7 && x[0]==6){
                y[0]=7;
                y[1]=i;
            }
        }
        int[][] z= new int[2][2];
        z[0]=x;
        z[1]=y;
        return z;
    }

}



10.
Print an array that contains the exact same numbers as the given array, but rearranged so that all the even numbers come before all the odd numbers. Other than that, the numbers can be in any order. You may modify and print the given array, or make a new array.

evenOdd([1, 0, 1, 0, 0, 1, 1]) → [0, 0, 0, 1, 1, 1, 1]
evenOdd([3, 3, 2]) → [2, 3, 3]
evenOdd([2, 2, 2]) → [2, 2, 2]

public class Q10{
	public static void main(String args[]){
		int[] nums={3,3,2};
		int[] nums2=evenOdd(nums);
		for (int element: nums2){
			System.out.println(element);
			}
		}
public int[] evenOdd(int[] nums) {
    int i = 0;
    
    while(i < nums.length && nums[i] % 2 == 0)
        i++;
              
    for(int j = i + 1; j < nums.length; j++) {
        if(nums[j] % 2 == 0) {
            int temp = nums[i];
            nums[i] = nums[j];
            nums[j] = temp;
            i++;
        }
    }
                                                    
    return nums;
}
}


11.
 Given an array of type int, print true if every element is 1 or 4. 

only14([1, 4, 1, 4]) → true
only14([1, 4, 2, 4]) → false
only14([1, 1]) → true

public class Q12{
	public static void main( String args[]){
		int nums[]={1,2,3,4,5,6};
		x=only14(nums);
		System.out.println(x);
public boolean only14(int[] nums) {
  boolean isTrue = true;
  
  for (int i = 0; i < nums.length; i++) {
    if (nums[i] != 1 && nums[i] != 4)
      isTrue = false;
  }
  return isTrue;
  
}
}


12.
 Given 2 int arrays, a and b, each length 3, form a new array of length 2, containing their middle elements.

middleWay([1, 2, 3], [4, 5, 6]) → [2, 5]
middleWay([7, 7, 7], [3, 8, 0]) → [7, 8]
middleWay([5, 2, 9], [1, 4, 5]) → [2, 4]

public class Q12{
	public static void main( String args[]){
		int a[]={1,2,3};
		int b[]={7,8,9};
		x=middleWay(a,b);
		System.out.println(x);
public class middleWay {
    public int[] middleWay(int[] a, int[] b) {
        int[] newArr = new int[2];
        newArr[0] = a[1];
        newArr[1] = b[1];

        return newArr;

    }

}
}


13.
Write a program to reverse the elements of a given 2*2 array. Four integer numbers needs to be passed as Command Line arguments.

Example1)
C:\>java Sample 1 2 3
O/P: Please enter 4 integer numbers

Example2)
C:\>java Sample 1 2 3 4
O/P: 
 The given array is :
  1 2 
  3 4 
 The reverse of the array is :
  4 3 
  2 1

public class Q13 {

    public static void main(String args[])
    {
    int a=args.length;
    int x,y,w,z,i;
    int arr[][] = new int[4][4];
    if(a<4)
    {
    System.out.println("enter 4 values");
    }
    if(a==4)
        
    {
        int k=0;
    for(i=0;i<2;i++)
    {
        for(int j=0;j<2;j++)
        {
            
        arr[i][j]=Integer.parseInt(args[k]);
        k++;
        }
        
    }
    System.out.println("The given array is:");
    for(i=0;i<2;i++)
    {
        for(int j=0;j<2;j++)
        {
        System.out.print(arr[i][j]+" ");
        }
        System.out.println();
        
    }
    System.out.println("The reverse of array is:");
    for(i=1;i>=0;i--)
    {
        for(int j=1;j>=0;j--)
        {
        System.out.print(arr[i][j]+" ");
        }
        System.out.println();
        
    }

    
    
    }  
}
}



14.
Write a program to find the biggest number in a 3*3 array. The program is supposed to receive 9 integer numbers as command line arguments.


Example1:
C:\>java Sample 1 2 3
O/P: Please enter 9 integer numbers

Example2:
C:\>java Sample 1 23 45 55 121 222 56 77 89
O/P: 
The given array is :
1 23 45 
55 121 222 
56 77 89 
The biggest number in the given array is 222


