1.The staff in the HR department wants to hide some of the data in the EMPLOYEES table. Create a view called EMPLOYEES_VU_UserID based on the employee numbers, employee last names, and department numbers from the EMPLOYEES table. The heading for the employee name should be EMPLOYEE.

Confirm that the view works. Display the contents of the EMPLOYEES_VU_UserID view.

CREATE OR REPLACE VIEW employees_vu AS
 SELECT employee_id, last_name employee, department_id
 FROM employees;

SELECT *
FROM employees_vu; 


2. Department 50 needs access to its employee data. Create a view named DEPT50_UserID that contains the employee numbers, employee last names, and department numbers for all employees in department 50. You have been asked to label the view columns EMPNO, EMPLOYEE, and DEPTNO. For security purposes, do not allow an employee to be reassigned to another department through the view.
Test your view. Attempt to reassign Matos to department 80.

CREATE VIEW dept50 AS
 SELECT employee_id empno, last_name employee,
 department_id deptno
 FROM employees
 WHERE department_id = 50
 WITH CHECK OPTION CONSTRAINT emp_dept_50;

UPDATE dept50
SET deptno = 80
WHERE employee = 'Matos';

3. You need a sequence that can be used with the PRIMARY KEY column of the DEPT_UserID table. The sequence should start at 200 and have a maximum value of 1,000. Have your sequence increment by 10. Name the sequence DEPT_ID_SEQ_UserID

CREATE SEQUENCE dept_id_seq
 START WITH 200
 INCREMENT BY 10
 MAXVALUE 1000; 

4.To test your sequence, write a script to insert two rows in the DEPT_UserID table. Name your script lab_11_08.sql . Be sure to use the sequence that you created for the ID column. Add two departments: Education and Administration. Confirm your additions. Run the commands in your script.

INSERT INTO dept
VALUES (dept_id_seq.nextval, 'Education');
INSERT INTO dept
VALUES (dept_id_seq.nextval, 'Administration'); 